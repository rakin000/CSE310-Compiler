.MODEL SMALL
.STACK 400H
.DATA
NUM_STR DB '000000$'
.CODE
f PROC
	MOV BP, SP; Line 1: save SP
	MOV CX, 2
	PUSH CX
	MOV CX,[BP+2]
	POP AX
	MUL CX
	PUSH AX
	POP AX
	PUSHF
	POPF
	RET
	MOV CX, 9
	PUSH CX
	POP AX
	MOV [BP+2], AX
	PUSH AX
	POP AX
	PUSHF
	POPF
f ENDP
g PROC
	MOV BP, SP; Line 6: save SP
	ADD SP, -2
	PUSH BP; Line 8: save pointer to current variable start
	MOV CX,[BP+2]
	PUSH CX
	CALL f
	MOV CX, AX
	ADD SP, 2
	POP BP
	PUSH CX
	MOV CX,[BP+2]
	PUSH CX
	POP AX
	POP BX
	ADD BX, AX
	PUSH BX
	MOV CX,[BP+4]
	PUSH CX
	POP AX
	POP BX
	ADD BX, AX
	PUSH BX
	POP AX
	MOV [BP+-2], AX
	PUSH AX
	POP AX
	PUSHF
	POPF
	MOV CX,[BP+-2]
	PUSH CX
	POP AX
	PUSHF
	POPF
	RET
g ENDP  
PRINT PROC
	MOV BX, 8000H
	AND BX, AX
	CMP BX, 0
	JZ NOT_NEG

	MOV BX, AX
	MOV DL, 2DH
	MOV AH, 2
	INT 21H
	MOV AX, BX
	NEG AX

	NOT_NEG:
	LEA SI, NUM_STR
	ADD SI, 6
	
	PRINT_LOOP:
	DEC SI
	MOV DX, 0
	MOV CX, 10
	DIV CX
	ADD DL, '0'
	MOV [SI], DL

	CMP AX, 0
	JNE PRINT_LOOP
	MOV DX, SI 
	MOV AH, 9
	INT 21H

	MOV DL, 0AH
	MOV AH, 2
	INT 21H
	MOV DL, 0DH
	INT 21H
	RET
PRINT ENDP

main PROC
	MOV AX, @DATA
	MOV DS, AX; Line 12: load data to DS
	MOV BP, SP; Line 12: save SP
	ADD SP, -4
	MOV CX, 1
	PUSH CX
	POP AX
	MOV [BP+-2], AX
	PUSH AX
	POP AX
	PUSHF
	POPF
	MOV CX, 2
	PUSH CX
	POP AX
	MOV [BP+-4], AX
	PUSH AX
	POP AX
	PUSHF
	POPF
	PUSH BP; Line 16: save pointer to current variable start
	MOV CX,[BP+-2]
	PUSH CX
	MOV CX,[BP+-4]
	PUSH CX
	CALL g
	MOV CX, AX
	ADD SP, 4
	POP BP
	PUSH CX
	POP AX
	MOV [BP+-2], AX
	PUSH AX
	POP AX
	PUSHF
	POPF
	MOV AX, [BP+-2]
	CALL PRINT
	MOV CX, 0
	PUSH CX
	POP AX
	PUSHF
	POPF
	RET
	MOV AH, 4CH
	INT 21H
main ENDP
END MAIN
